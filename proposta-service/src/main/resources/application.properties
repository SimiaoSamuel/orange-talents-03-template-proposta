#DATASOURCE
#spring.datasource.driverClassName = org.h2.Driver
#spring.datasource.url = jdbc:h2:mem:proposta
#spring.datasource.username = sa
#spring.datasource.password =

#H2
#spring.h2.console.enabled = true
#spring.h2.console.path=/h2-console

spring.datasource.url = jdbc:mysql://localhost:3308/novaproposta?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#JPA
#spring.jpa.database-platform = org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true

server.port=8081

#actuator
management.endpoint.health.status.http-mapping.DOWN=500
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,metrics,info,prometheus

#Enabling Prometheus
management.endpoints.prometheus.enabled=true


info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.java.version=@java.version@
info.app.encoding=@project.build.sourceEncoding@

cartao.restricao = ${CARTAO_URL:http://localhost:9999}
cartao.criacao = ${CARTAO_CRIACAO:http://localhost:8888}

keycloak.auth-server-url = http://localhost:18080/auth
keycloak.realm = propostakeycloak
keycloak.resource = proposta-service
keycloak.public-client = true
keycloak.bearer-only = true

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=proposta

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.spring.cloud.feign.enabled=false
spring.cloud.loadbalancer.ribbon.enabled=false